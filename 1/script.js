// Замыкание для расширения функционала существующих глобальных функций
(function () {
    // Для каждого элемента объекта window
    for (name in window) {
        // Если элемент является функцией
        if (typeof window[name] === 'function') {
            // Делаем его самосчитающимся
            window[name] = makeCountable(window[name]);
        }
    }
})();

/*
 * В эту функцию можно оборачивать создаваемые в процессе работы функции 
 * или функции которые находятся не в глобальном окружении 
 * или являются методами каких-либо объектов
 */
function makeCountable(fn) {
    // Делаем функцию-обёртку чтобы прилепить счётчик к её контексту и видеть его потом как свойство вызываемой функции
    var wrapFunction = function() {
        // Увеличиваем счётчик вызова функции
        wrapFunction.callsCount++;
        // и исходная с полным соответствием аргументов и возвращаемого значения
        return fn.apply(this, arguments);
    }
    // Задаём начальное значение счётчика
    wrapFunction.callsCount = 0;

    // возвращаем "обёртку"
    return wrapFunction;
}